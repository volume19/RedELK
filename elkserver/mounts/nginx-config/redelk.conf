# RedELK Nginx Configuration
#
# This configuration provides:
# - HTTPS proxy to Kibana
# - Serving of C2 artifacts (beaconlogs, screenshots, keystrokes, downloads)
# - Basic authentication for Kibana access
# - Thumbnail generation and serving
#

# HTTP server - redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name _;

    # Allow Let's Encrypt challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server - main RedELK interface
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;

    # SSL configuration
    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logging
    access_log /var/log/nginx/redelk-access.log;
    error_log /var/log/nginx/redelk-error.log;

    # Client body size for file uploads
    client_max_body_size 100M;
    client_body_buffer_size 128k;

    # Proxy timeouts
    proxy_connect_timeout 600;
    proxy_send_timeout 600;
    proxy_read_timeout 600;
    send_timeout 600;

    # Basic authentication for Kibana
    auth_basic "RedELK Authentication";
    auth_basic_user_file /etc/nginx/.htpasswd;

    # Root location - proxy to Kibana
    location / {
        # Disable auth for specific paths if needed
        location = /api/status {
            auth_basic off;
            proxy_pass https://redelk-kibana:5601;
        }

        proxy_pass https://redelk-kibana:5601;
        proxy_redirect off;
        proxy_http_version 1.1;

        # Headers for Kibana
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Port $server_port;

        # WebSocket support for Kibana
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Buffering settings
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # C2 Server logs directory
    location /cslogs/ {
        alias /usr/share/nginx/html/cslogs/;
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime on;

        # Allow viewing of log files
        location ~ \.(log|txt|tsv)$ {
            add_header Content-Type "text/plain; charset=utf-8";
        }

        # Serve images
        location ~ \.(jpg|jpeg|png|gif)$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # Thumbnails
        location ~ \.thumb\.jpg$ {
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
    }

    # Screenshots directory (direct access)
    location /screenshots/ {
        alias /usr/share/nginx/html/cslogs/screenshots/;
        autoindex on;

        # Generate thumbnails on the fly if missing
        location ~ ^/screenshots/(.+\.jpg)$ {
            try_files $uri $uri.thumb.jpg @generate_thumb;
        }
    }

    # Keystrokes directory
    location /keystrokes/ {
        alias /usr/share/nginx/html/cslogs/keystrokes/;
        autoindex on;
        add_header Content-Type "text/plain; charset=utf-8";
    }

    # Downloads directory
    location /downloads/ {
        alias /usr/share/nginx/html/cslogs/downloads/;
        autoindex on;
    }

    # Beacon logs directory
    location /beaconlogs/ {
        alias /usr/share/nginx/html/cslogs/beaconlogs/;
        autoindex on;
        add_header Content-Type "text/plain; charset=utf-8";
    }

    # Health check endpoint (no auth)
    location /health {
        auth_basic off;
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Favicon
    location /favicon.ico {
        log_not_found off;
        access_log off;
        return 204;
    }

    # Robots.txt - disallow all
    location /robots.txt {
        auth_basic off;
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain;
    }

    # Error pages
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Generate thumbnail on demand (if ImageMagick is available)
location @generate_thumb {
    # This would require additional configuration for on-the-fly thumbnail generation
    return 404;
}