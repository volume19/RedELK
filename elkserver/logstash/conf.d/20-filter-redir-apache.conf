# Apache Redirector Log Parser
# Parses Apache access logs with RedELK custom format

filter {
  if [fields][infralogtype] == "redirtraffic" and [fields][redirprogram] == "apache" {

    grok {
      match => { "message" => "%{IPORHOST:source.ip} %{USER:apache.identd} %{USER:user.name} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:http.request.method} %{NOTSPACE:url.original}(?: HTTP/%{NUMBER:http.version})?|%{DATA:apache.rawrequest})\" %{NUMBER:http.response.status_code} (?:%{NUMBER:http.response.body.bytes}|-) \"%{DATA:http.request.referrer}\" \"%{DATA:user_agent.original}\" \"%{DATA:http.request.headers.x-forwarded-for}\" \"%{DATA:http.request.headers.x-forwarded-proto}\" \"%{DATA:http.request.headers.x-host}\" \"%{DATA:http.request.headers.host}\" \"%{DATA:redir.frontend.name}\" \"%{DATA:redir.backend.name}\"" }
    }

    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
      target => "@timestamp"
    }

    # Parse X-Forwarded-For to get real client IP
    if [http.request.headers.x-forwarded-for] and [http.request.headers.x-forwarded-for] != "-" {
      mutate {
        split => { "http.request.headers.x-forwarded-for" => "," }
      }
      mutate {
        replace => { "source.ip" => "%{[http.request.headers.x-forwarded-for][0]}" }
      }
    }

    # GeoIP enrichment
    geoip {
      source => "source.ip"
      target => "source.geo"
    }

    # User agent parsing
    useragent {
      source => "user_agent.original"
      target => "user_agent"
    }

    # Add metadata
    mutate {
      add_field => {
        "infra.log_type" => "redirtraffic"
        "infra.log_subtype" => "apache"
        "event.module" => "redelk"
        "event.dataset" => "redirtraffic"
      }
      convert => {
        "http.response.status_code" => "integer"
        "http.response.body.bytes" => "integer"
      }
    }

    # Tag suspicious traffic
    if [http.response.status_code] >= 400 and [http.response.status_code] < 500 {
      mutate { add_tag => [ "http_error_4xx" ] }
    }
    if [http.response.status_code] >= 500 {
      mutate { add_tag => [ "http_error_5xx" ] }
    }

    # Flag potential blue team tools
    if [user_agent.original] =~ /(?i:curl|wget|python|powershell|nmap|nikto|sqlmap|dirbuster|burp|zap|acunetix)/ {
      mutate { add_tag => [ "suspicious_useragent" ] }
    }
  }
}
