# PoshC2 C2 Log Parser
# Parses PoshC2 framework logs

filter {
  if [fields][logtype] == "rtops" and [fields][c2_program] == "poshc2" {

    # Parse PoshC2 log format
    grok {
      match => {
        "message" => "%{TIMESTAMP_ISO8601:posh.timestamp} %{WORD:posh.level} - %{DATA:posh.module}: %{GREEDYDATA:posh.message}"
      }
    }

    # Parse implant checkins
    if [posh.message] =~ /New implant/ {
      grok {
        match => {
          "posh.message" => "New implant connected: %{DATA:posh.implant_id} on %{IP:host.ip}"
        }
      }
      mutate {
        add_field => {
          "event.action" => "implant_checkin"
          "beacon.id" => "%{posh.implant_id}"
        }
      }
    }

    # Parse command execution
    if [posh.message] =~ /Task|Tasked/ {
      grok {
        match => {
          "posh.message" => "Tasked %{DATA:posh.implant_id}: %{GREEDYDATA:process.command_line}"
        }
      }
      mutate {
        add_field => {
          "event.action" => "command_execution"
          "beacon.id" => "%{posh.implant_id}"
        }
      }
    }

    # Parse output
    if [posh.level] == "OUTPUT" {
      mutate {
        add_field => {
          "event.action" => "command_output"
        }
      }
    }

    # Common enrichment
    mutate {
      add_field => {
        "event.module" => "poshc2"
        "event.dataset" => "rtops"
        "agent.type" => "poshc2"
        "c2.program" => "poshc2"
        "infra.log_type" => "rtops"
      }
    }

    # Date parsing
    if [posh.timestamp] {
      date {
        match => [ "posh.timestamp", "ISO8601" ]
        target => "@timestamp"
      }
    }

    # GeoIP enrichment
    if [host.ip] {
      geoip {
        source => "host.ip"
        target => "host.geo"
      }
    }

    # Tag important activities
    if [posh.message] =~ /(?i:credential|password|hash|mimikatz)/ {
      mutate {
        add_tag => [ "credentials", "high_value_activity" ]
      }
    }

    if [posh.message] =~ /(?i:screenshot)/ {
      mutate {
        add_tag => [ "screenshot" ]
      }
    }

    if [posh.message] =~ /(?i:keylog)/ {
      mutate {
        add_tag => [ "keylogger" ]
      }
    }
  }
}
