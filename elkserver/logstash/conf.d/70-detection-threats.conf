# Threat Detection Rules
filter {
  # Initialize alarm fields
  if ![alarm] {
    mutate {
      add_field => { "[alarm][detected]" => "false" }
    }
  }

  # Detection Rule: Sandbox/Analysis Environment
  if [fields][infralogtype] == "redirtraffic" {
    # Check for sandbox indicators
    if [user_agent][original] =~ /(?i)(sandbox|virustotal|hybrid-analysis|any\.run|joe sandbox|cuckoo|falcon sandbox|threatgrid|wildfire|forcepoint|fireeye)/ or
       [source][ip] =~ /^(192\.168\.56\.|10\.0\.0\.)/ and [user_agent][os][name] =~ /(?i)(windows xp|windows 7)/ {
      mutate {
        add_field => {
          "[alarm][detected]" => "true"
          "[alarm][name]" => "Sandbox Detection"
          "[alarm][severity]" => "high"
          "[alarm][type]" => "sandbox"
          "[alarm][description]" => "Traffic potentially from malware sandbox or analysis environment"
        }
        add_tag => [ "alarm", "sandbox_detected" ]
      }
    }

    # Check for TOR exit nodes
    translate {
      source => "[source][ip]"
      target => "[threat][tor_exit]"
      dictionary_path => "/usr/share/logstash/tor-exit-nodes.txt"
      fallback => "false"
    }
    if [threat][tor_exit] == "true" {
      mutate {
        add_field => {
          "[alarm][detected]" => "true"
          "[alarm][name]" => "TOR Exit Node"
          "[alarm][severity]" => "medium"
          "[alarm][type]" => "anonymizer"
          "[alarm][description]" => "Traffic from known TOR exit node"
        }
        add_tag => [ "alarm", "tor_detected" ]
      }
    }

    # Check for VPN providers
    if [source][as][organization][name] =~ /(?i)(nordvpn|expressvpn|cyberghost|private internet access|surfshark|protonvpn|mullvad|windscribe|tunnelbear|ipvanish)/ {
      mutate {
        add_field => {
          "[alarm][detected]" => "true"
          "[alarm][name]" => "VPN Provider Detected"
          "[alarm][severity]" => "low"
          "[alarm][type]" => "vpn"
          "[alarm][description]" => "Traffic from known VPN provider"
        }
        add_tag => [ "alarm", "vpn_detected" ]
      }
    }

    # Check for cloud providers accessing C2
    if [cdn][detected] == "true" or [source][as][organization][name] =~ /(?i)(amazon|google|microsoft|digital ocean|linode|vultr|ovh)/ {
      mutate {
        add_field => {
          "[alarm][detected]" => "true"
          "[alarm][name]" => "Cloud Provider Access"
          "[alarm][severity]" => "medium"
          "[alarm][type]" => "cloud_access"
          "[alarm][description]" => "C2 infrastructure accessed from cloud provider IP"
        }
        add_tag => [ "alarm", "cloud_access" ]
      }
    }

    # Check for security scanner activity
    if "security_scanner" in [tags] {
      mutate {
        add_field => {
          "[alarm][detected]" => "true"
          "[alarm][name]" => "Security Scanner Detected"
          "[alarm][severity]" => "high"
          "[alarm][type]" => "scanner"
          "[alarm][description]" => "Known security scanner user agent detected"
        }
        add_tag => [ "alarm", "scanner_alarm" ]
      }
    }
  }

  # Detection Rule: Suspicious C2 Activity
  if [fields][logtype] == "rtops" {
    # Check for rapid beacon check-ins (potential detection)
    if [beacon][sleep] and [beacon][sleep] < 5 {
      mutate {
        add_field => {
          "[alarm][detected]" => "true"
          "[alarm][name]" => "Rapid Beacon Callback"
          "[alarm][severity]" => "medium"
          "[alarm][type]" => "c2_anomaly"
          "[alarm][description]" => "Beacon checking in with unusually short sleep time"
        }
        add_tag => [ "alarm", "rapid_beacon" ]
      }
    }

    # Check for suspicious commands
    if [command][type] =~ /(?i)(mimikatz|lazagne|procdump|hashdump|sam|lsass|credentials|passwd|shadow)/ {
      mutate {
        add_field => {
          "[alarm][detected]" => "true"
          "[alarm][name]" => "Credential Harvesting Detected"
          "[alarm][severity]" => "critical"
          "[alarm][type]" => "credential_access"
          "[alarm][description]" => "Potential credential harvesting activity detected"
          "[mitre][technique]" => "T1003"
          "[mitre][tactic]" => "Credential Access"
        }
        add_tag => [ "alarm", "credential_theft" ]
      }
    }

    # Check for lateral movement indicators
    if [command][type] =~ /(?i)(psexec|wmi|winrm|ssh|rdp|smb|dcom|rpc)/ {
      mutate {
        add_field => {
          "[alarm][detected]" => "true"
          "[alarm][name]" => "Lateral Movement Activity"
          "[alarm][severity]" => "high"
          "[alarm][type]" => "lateral_movement"
          "[alarm][description]" => "Potential lateral movement activity detected"
          "[mitre][technique]" => "T1021"
          "[mitre][tactic]" => "Lateral Movement"
        }
        add_tag => [ "alarm", "lateral_movement" ]
      }
    }

    # Check for data exfiltration
    if [file][size] and [file][size] > 104857600 {  # 100MB
      mutate {
        add_field => {
          "[alarm][detected]" => "true"
          "[alarm][name]" => "Large File Transfer"
          "[alarm][severity]" => "high"
          "[alarm][type]" => "exfiltration"
          "[alarm][description]" => "Large file transfer detected, potential data exfiltration"
          "[mitre][technique]" => "T1041"
          "[mitre][tactic]" => "Exfiltration"
        }
        add_tag => [ "alarm", "large_transfer" ]
      }
    }
  }

  # Copy alarms to dedicated index
  if [alarm][detected] == "true" {
    mutate {
      add_field => {
        "[alarm][@timestamp]" => "%{@timestamp}"
        "[alarm][source_index]" => "%{[@metadata][target_index]}"
      }
    }
    clone {
      clones => ["alarm"]
    }
  }
}